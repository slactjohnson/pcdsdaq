#!/bin/bash
# Source this to collect the correct daq libs for pydaq, pycdb, and pyami
# export HUTCH=<hutchname-lowercase> before sourcing
# This is not guaranteed to be conflict-free with your python env
# This works by expanding your PYTHONPATH and LD_LIBRARY_PATH

if [ -z "${HUTCH}" ]; then
  # Default to daq latest
  DAQREL="/reg/g/pcds/dist/pds/current/build"
  AMIREL="/reg/g/pcds/dist/pds/ami-current/build"
  HUTCH="current"
else
  DAQREL="/reg/g/pcds/dist/pds/${HUTCH}/current/build"
  AMIREL="/reg/g/pcds/dist/pds/${HUTCH}/ami-current/build"
fi

OS_VER="$(uname -r | rev | cut -d . -f 2 | rev)"
if [ "${OS_VER}" = el6 ]; then
  OS_DIR=x86_64-linux
elif [ "${OS_VER}" = el7 ]; then
  OS_DIR=x86_64-rhel7
fi

if [ -z "${OS_DIR}" ]; then
  echo "OS must be rhel6 or rhel7"
else
  # Expand pythonpath with correct link
  pcdsdaq_init="$(python -c 'import pcdsdaq; print(pcdsdaq.__file__)')"
  pydaq_links="$(dirname ${pcdsdaq_init})/pydaq_links/links/${HUTCH}/${OS_DIR}"
  export PYTHONPATH="${PYTHONPATH}:${pydaq_links}"

  # Add ami libraries
  for dir in ami gsl qt
  do
    export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:${AMIREL}/${dir}/lib/${OS_DIR}-opt"
  done

  # Add daq libraries
  for dir in pdsapp psalg pds pdsdata offlinedb
  do
    export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:${DAQREL}/${dir}/lib/${OS_DIR}-opt"
  done
fi
